# SBECmd

## SBECmd Introduction

SBECmd is a tool created by Eric Zimmerman used to parse the NTUSER.dat and UsrClass.dat Registry hives. These hives contains shell items that are recorded by Windows which indicate which folders a user has traversed.

<!-- TODO: need to expand this -->
<!-- TODO: need to use DFIRArtifactMuseum paths in commands used in Switch Descriptions section -->

{pagebreak}

## SBECmd Switches

In a PowerShell window, running `.\SBECmd.exe` will provide the following options when running SBECmd:

{line-numbers:false}
```powershell
Description:
  SBECmd version 2.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman

  Examples: SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout
            SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout --tz "US Eastern Standard Time"
            SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout --dedupe

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed
  with two dashes


Usage:
  SBECmd [options]

Options:
  -d <d>          Directory to look for registry hives. This or -l is required
  -l              Process live registry (Requires Administrator rights). This or -d is required
                  [default: False]
  --csv <csv>     Directory to save CSV formatted results to. This or --json required unless --de
                  or --body is specified
  --csvf <csvf>   File name to save CSV formatted results to. When present, overrides default name
  --dedupe        When true, SBECmd processes all hives in -d <directory> and removes duplicates.
                  See manual for details [default: False]
  --dt <dt>       The custom date/time format to use when displaying time stamps. See
                  https://goo.gl/CNVq0k for options [default: yyyy-MM-dd HH:mm:ss]
  --nl            When true, ignore transaction log files for dirty hives [default: False]
  --debug         Show debug information during processing [default: False]
  --trace         Show trace information during processing [default: False]
  --version       Show version information
  -?, -h, --help  Show help and usage information


-d or -l required. Exiting
```

### Switch Descriptions

#### `-l`

This switch will inform SBECmd to process the live user Registry hives.

Example: `.\SBECmd.exe -l --csv D:\temp\sbecmd`

The above command will output a filename similar to this: `YYYYMMDD_HHMMSS_hostname_LIVE_REGISTRY.csv`

#### `-nl`

This switch will inform the tool whether to replay transaction logs or not.

Below is an exmaple of replaying transaction logs:

Example: `.\SBECmd.exe -d "D:\temp\hives" --nl false --csv "D:\temp"`

When processing transaction logs, you will see a message similar to this:

```
Two transaction logs found. Determining primary log...
Primary log: D:\temp\hives\SYSTEM.LOG2, secondary log: D:\temp\hives\SYSTEM.LOG1
Replaying log file: D:\temp\hives\SYSTEM.LOG2
Replaying log file: D:\temp\hives\SYSTEM.LOG1
At least one transaction log was applied. Sequence numbers have been updated to 0x91DD. New Checksum: 0xAD729723
Found 1,024 cache entries for Windows10Creators in ControlSet001
```

Below is an example of ignoring transaction logs:

Example: `.\SBECmd.exe -d "D:\temp\hives" --nl true --csv "D:\temp"`

When ignoring transaction logs, you will see a message similar to this:

```
Registry hive is dirty and transaction logs were found in the same directory, but --nl was provided. Data may be missing! Continuing anyways...
Sequence numbers do not match! Hive is dirty and the transaction logs should be reviewed for relevant data!
Found 1,024 cache entries for Windows10Creators in ControlSet001
```

<!-- All other switches are covered by eztools_commonswitches.txt - 2022-09-15 -->

{pagebreak}

## SBECmd Command Examples

### Example SBECmd Commands

#### Parse offline user Registry hives and output to CSV to a specified location

{line-numbers:false}
```powershell
SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout
```

#### Parse offline user Registry hives and output to CSV to a specified location with timestamps adjusted to a specified timezone

{line-numbers:false}
```powershell
SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout --tz "US Eastern Standard Time"
```
#### Parse offline user Registry hives and output to CSV to a specified location with deduplicated output

{line-numbers:false}
```powershell
SBECmd.exe -d c:\temp\hives --csv c:\temp\sbeout --dedupe
```

{pagebreak}

## SBECmd Output

### Analyzing SBECmd Output - CSV

When executing SBECmd with CSV output enabled, it will output filenames similar to the examples below:

```
Username_NTUSER.csv
Username_usrClass.csv
```

If the system you're analzying has had 100 users who have traversed directories at some point in time, you should see 200 CSVs for your output!

{pagebreak}

## SBECmd Key Takeaways

### Important Data Points

#### FirstInteracted and LastInteracted

THe FirstInteracted timestamp for a shell item will provide you with the timestamp of the first time a given user had traversed a directory within Windows. The LastInteracted timestamp for a shell item will provide you with the last time a given user had traversed a directory within Windows. There are no timestamps for in between those two bookends within this artifact.

{pagebreak}

## SBECmd References

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2015/02/shellbags-explorer-v0520-released.html>
* <https://binaryforay.blogspot.com/2015/02/shellbags-explorer-0540-released.html>
* <https://binaryforay.blogspot.com/2015/08/a-few-updates.html>
* <https://binaryforay.blogspot.com/2017/01/shellbags-explorer-v0800-released.html>
* <https://binaryforay.blogspot.com/2017/09/shellbags-explorer-0950-released.html>
* <https://binaryforay.blogspot.com/2018/05/a-fluery-of-updates.html>
* <https://binaryforay.blogspot.com/2019/01/locked-file-support-added-to.html>

### Download SBECmd

SBECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>

### Shellbags Sample Data

Sample Shellbags (NTUser.dat and UsrClass.dat) artifacts can be found at the [DFIRArtifactMuseum](https://github.com/AndrewRathbun/DFIRArtifactMuseum/tree/main/Windows/Registry).
