# PECmd

## PECmd Introduction

PECmd is a tool created by Eric Zimmerman used to parse Windows Prefetch files (.pf), which can be located at ‘C:\Windows\Prefetch‘.

{pagebreak}

## PECmd Switches

In a PowerShell window, running `.\PECmd.exe` will provide the following options when running PECmd:

{line-numbers:false}
```powershell
Description:
  PECmd version 1.5.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/PECmd

  Examples: PECmd.exe -f "C:\Temp\CALC.EXE-3FBEF7FD.pf"
            PECmd.exe -f "C:\Temp\CALC.EXE-3FBEF7FD.pf" --json "D:\jsonOutput" --jsonpretty
            PECmd.exe -d "C:\Temp" -k "system32, fonts"
            PECmd.exe -d "C:\Temp" --csv "c:\temp" --csvf foo.csv --json c:\temp\json
            PECmd.exe -d "C:\Windows\Prefetch"

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed
  with two dashes

Usage:
  PECmd [options]

Options:
  -f <f>           File to process. Either this or -d is required
  -d <d>           Directory to recursively process. Either this or -f is required
  -k <k>           Comma separated list of keywords to highlight in output. By default, 'temp' and
                   'tmp' are highlighted. Any additional keywords will be added to these
  -o <o>           When specified, save prefetch file bytes to the given path. Useful to look at
                   decompressed Win10 files
  -q               Do not dump full details about each file processed. Speeds up processing when
                   using --json or --csv [default: False]
  --json <json>    Directory to save JSON formatted results to. Be sure to include the full path
                   in double quotes
  --jsonf <jsonf>  File name to save JSON formatted results to. When present, overrides default
                   name
  --csv <csv>      Directory to save CSV formatted results to. Be sure to include the full path in
                   double quotes
  --csvf <csvf>    File name to save CSV formatted results to. When present, overrides default name
  --html <html>    Directory to save xhtml formatted results to. Be sure to include the full path
                   in double quotes
  --dt <dt>        The custom date/time format to use when displaying time stamps. See
                   https://goo.gl/CNVq0k for options [default: yyyy-MM-dd HH:mm:ss]
  --mp             When true, display higher precision for timestamps [default: False]
  --vss            Process all Volume Shadow Copies that exist on drive specified by -f or -d
                   [default: False]
  --dedupe         Deduplicate -f or -d & VSCs based on SHA-1. First file found wins [default:
                   False]
  --debug          Show debug information during processing [default: False]
  --trace          Show trace information during processing [default: False]
  --version        Show version information
  -?, -h, --help   Show help and usage information


Either -f or -d is required. Exiting
```

### Switch Descriptions

#### SWITCH

{pagebreak}

## PECmd Command Examples

### Example PECmd Commands

#### Parse a Prefetch file and output to the console window

{line-numbers:false}
```powershell
PECmd.exe -f "C:\Temp\CALC.EXE-3FBEF7FD.pf"
```

#### Parse a Prefetch file and output to formatted JSON to a specified location

{line-numbers:false}
```powershell
PECmd.exe -f "C:\Temp\CALC.EXE-3FBEF7FD.pf" --json "D:\jsonOutput" --jsonpretty
```

#### Parse a directory of Prefetch files and output to console window with specified keywords highlighted in the output

{line-numbers:false}
```powershell
PECmd.exe -d "C:\Temp" -k "system32, fonts"
```

#### Parse a directory of Prefetch and output to CSV to a specified location with the filename ‘foo.csv‘ and output to JSON to a specified location

{line-numbers:false}
```powershell
PECmd.exe -d "C:\Temp" --csv "c:\temp" --csvf foo.csv --json c:\temp\json
```

#### Parse a directory of Prefetch files

{line-numbers:false}
```powershell
PECmd.exe -d "C:\Windows\Prefetch"
```

{pagebreak}

## PECmd Output

### Analyzing PECmd Output - Console

{pagebreak}

### Analyzing PECmd Output - CSV

{pagebreak}

### Analyzing PECmd Output - JSON

{pagebreak}

### Analyzing PECmd Output - HTML

{pagebreak}

## PECmd Sample Output

{pagebreak}

## PECmd Key Takeaways

### Important Data Points

{pagebreak}

## PECmd References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/JumpList> is the C# library for parsing JumpList files 
* <https://github.com/EricZimmerman/OleCf> is the C# library for parsing OLE compound files, which Jump Lists are
* <https://github.com/EricZimmerman/JLECmd> is the Command Line wrapper for the JumpList library

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2016/01/windows-prefetch-parser-in-c.html>
* <https://binaryforay.blogspot.com/2016/01/introducing-pecmd.html>
* <https://binaryforay.blogspot.com/2016/01/pecmd-v0600-released.html>
* <https://binaryforay.blogspot.com/2016/03/pecmd-lecmd-and-jlecmd-updated.html>

#### Community Resources

* <https://or10nlabs.tech/prefetch-forensics/>
* <https://www.security-hive.com/post/execution-evidence-prefetch-files>
* <https://www.hackingarticles.in/forensic-investigation-prefetch-file/>
* <https://angry-bender.github.io/blog/WIP_Windows_Artefacts/>

### Download PECmd

PECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>
