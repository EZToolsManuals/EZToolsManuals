# EvtxECmd

## EvtxECmd Introduction

EvtxECmd is a tool created by Eric Zimmerman used to parse event logs from Windows. Versions of Windows from Vista and beyond have utilized the .evtx format, which incorporates XML payloads within the .evtx files. EvtxECmd only parses .evtx files, so if you're dealing with .evt files, EvtxECmd will not parse those particular files.

{pagebreak}

## EvtxECmd Switches

In a PowerShell window, running `.\EvtxECmd.exe` will provide the following options when running EvtxECmd:

### EvtxECmd Maps

<https://github.com/EricZimmerman/evtx/tree/master/evtx/Maps>

#### Creating EvtxECmd Maps

If you are looking for guidance on how to create EvtxECmd Maps, look no further than the following resources:

* [EvtxECmd Maps Guide](https://github.com/EricZimmerman/evtx/blob/master/evtx/Maps/!Channel-Name_Provider-Name_EventID.guide)
* [EvtxECmd Maps Template](https://github.com/EricZimmerman/evtx/blob/master/evtx/Maps/!Channel-Name_Provider-Name_EventID.template)

Additionally, please check out Andrew Rathbun’s 2021 SANS DFIR Summit presentation on EZ Tools/KAPE: How to Contribute to and Benefit from Open Source Contributions. Click [here](https://youtu.be/mIb1GQP3ciE?t=860) for a timestamped link to the section of the presentation that relates to EvtxECmd Maps.

## EvtxECmd Switches

In a PowerShell window, running `.\EvtxECmd.exe` will provide the following options when running EvtxECmd:

{line-numbers:false}
```powershell
Description:
  EvtxECmd version 1.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/evtx

  Examples: EvtxECmd.exe -f "C:\Temp\Application.evtx" --csv "c:\temp\out" --csvf MyOutputFile.csv
            EvtxECmd.exe -f "C:\Temp\Application.evtx" --csv "c:\temp\out"
            EvtxECmd.exe -f "C:\Temp\Application.evtx" --json "c:\temp\jsonout"

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed with two dashes

Usage:
  EvtxECmd [options]

Options:
  -f <f>           File to process. This or -d is required
  -d <d>           Directory to process that contains evtx files. This or -f is required
  --csv <csv>      Directory to save CSV formatted results to
  --csvf <csvf>    File name to save CSV formatted results to. When present, overrides default name
  --json <json>    Directory to save JSON formatted results to
  --jsonf <jsonf>  File name to save JSON formatted results to. When present, overrides default name
  --xml <xml>      Directory to save XML formatted results to
  --xmlf <xmlf>    File name to save XML formatted results to. When present, overrides default name
  --dt <dt>        The custom date/time format to use when displaying time stamps [default: yyyy-MM-dd HH:mm:ss.fffffff]
  --inc <inc>      List of Event IDs to process. All others are ignored. Overrides --exc Format is 4624,4625,5410
  --exc <exc>      List of Event IDs to IGNORE. All others are included. Format is 4624,4625,5410
  --sd <sd>        Start date for including events (UTC). Anything OLDER than this is dropped. Format should match --dt
  --ed <ed>        End date for including events (UTC). Anything NEWER than this is dropped. Format should match --dt
  --fj             When true, export all available data when using --json [default: False]
  --tdt <tdt>      The number of seconds to use for time discrepancy detection [default: 1]
  --met            When true, show metrics about processed event log [default: True]
  --maps <maps>    The path where event maps are located. Defaults to 'Maps' folder where program was executed
                   [default: C:\Users\CFUser\OneDrive - Kroll\Desktop\EZ Tools\net6\EvtxeCmd\Maps]
  --vss            Process all Volume Shadow Copies that exist on drive specified by -f or -d [default: False]
  --dedupe         Deduplicate -f or -d & VSCs based on SHA-1. First file found wins [default: True]
  --sync           If true, the latest maps from https://github.com/EricZimmerman/evtx/tree/master/evtx/Maps are
                   downloaded and local maps updated [default: False]
  --debug          Show debug information during processing [default: False]
  --trace          Show trace information during processing [default: False]
  --version        Show version information
  -?, -h, --help   Show help and usage information


-f or -d is required. Exiting
```

### Switch Descriptions

#### inc

This switch will provide EvtxECmd with which event ID(s) to process.

Example: `.\EvtxECmd.exe -d C:\Windows\System32\winevt\Logs --inc 4624,4625`

The above command WILL process 4624 and 4625 events, but will NOT process anything else.

### exc

This switch will provide EvtxECmd with which event ID(s) to ignore during process.

Example: `.\EvtxECmd.exe -d C:\Windows\System32\winevt\Logs --exc 4624,4625`

The above command will NOT process 4624 and 4625 events, but will process everything other event.

#### sd

This switch will provide a starting date for which EvtxECmd will process all events that have occurred AFTER that date.

Example: `.\EvtxECmd.exe -f "C:\Windows\System32\winevt\Logs\Microsoft-Windows-SmbClient%4Security.evtx" --csv D:\ --sd "2022-07-29 00:00:00.0000000"`

Not using quotes around the timestamp may cause issues.

#### ed

This switch will provide a starting date for which EvtxECmd will process all events that have occurred BEFORE that date.

Example: `.\EvtxECmd.exe -f "C:\Windows\System32\winevt\Logs\Microsoft-Windows-SmbClient%4Security.evtx" --csv D:\ --ed "2022-07-27 00:00:00.0000000"`

Not using quotes around the timestamp may cause issues.

#### fj

This switch will include full details when using the common `--json` switch.

Example: `.\EvtxECmd.exe -d "C:\Users\CFUser\Downloads\EventLogs\logs" --json "C:\Users\CFUser\Downloads\EventLogs\logs\json" --fj`

#### tdt


#### met



#### maps


#### dedupe


#### `--sync‘

This switch will inform the tool to download all EvtxECmd Maps from [GitHub](https://github.com/EricZimmerman/evtx/tree/master/evtx/Maps) and update the local Maps stored in `.\EvtxECmd\Maps`.

Example: `.\EvtxECmd.exe --sync`

{pagebreak}

## EvtxECmd Command Examples

### Example EvtxECmd Commands

#### Example description here

{line-numbers:false}
```powershell

```

{pagebreak}

## EvtxECmd Output

### Analyzing EvtxECmd Output - Console

{pagebreak}

### Analyzing EvtxECmd Output - CSV

{pagebreak}

### Analyzing EvtxECmd Output - JSON

{pagebreak}

### Analyzing EvtxECmd Output - HTML

{pagebreak}

## EvtxECmd Sample Output

{pagebreak}

## EvtxECmd Key Takeaways

### Important Data Points

{pagebreak}

## EvtxECmd References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/JumpList> is the C# library for parsing JumpList files
* <https://github.com/EricZimmerman/OleCf> is the C# library for parsing OLE compound files, which Jump Lists are
* <https://github.com/EricZimmerman/JLECmd> is the Command Line wrapper for the JumpList library

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2019/04/introducing-evtxecmd.html>

#### Community Resources

* Links to blog posts go here

### Download EvtxECmd

EvtxECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>
