# RECmd

## RECmd Introduction

RECmd is a tool created by Eric Zimmerman used to parse Registry hives. Registry hives are located at `C:\Windows\System32\config` and contain multiple hives of interest.

### RECmd Batch Files

<https://github.com/EricZimmerman/RECmd/tree/master/BatchExamples>

#### Creating RECmd Batch Files

If you are looking for guidance on how to create RECmd Batch Files, look no further than the following resources:

* [RECmd Batch Files Guide](https://github.com/EricZimmerman/RECmd/blob/master/BatchExamples/!RECmdBatch.guide)
* [RECmd Batch Files Template](https://github.com/EricZimmerman/RECmd/blob/master/BatchExamples/!RECmdBatch.template)

Additionally, please check out Andrew Rathbun’s 2021 SANS DFIR Summit presentation on EZ Tools/KAPE: How to Contribute to and Benefit from Open Source Contributions. Click [here](https://youtu.be/mIb1GQP3ciE?t=318) for a timestamped link to the section of the presentation that relates to RECmd Batch Files.

{pagebreak}

## RECmd Switches

In a PowerShell window, running `.\RECmd.exe` will provide the following options when running RECmd:

{line-numbers:false}
```powershell
RECmd version 2.0.0.0

Author: Eric Zimmerman (saericzimmerman@gmail.com)
https://github.com/EricZimmerman/RECmd

Note: Enclose all strings containing spaces (and all RegEx) with double quotes

Command line:

Description:
  RECmd version 2.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/RECmd

  Note: Enclose all strings containing spaces (and all RegEx) with double quotes

  Example: ``RECmd.exe --f "C:\Temp\UsrClass 1.dat" --sk URL --recover false --nl
             RECmd.exe --f "D:\temp\UsrClass 1.dat" --StartDate "11/13/2014 15:35:01"
             RECmd.exe --f "D:\temp\UsrClass 1.dat" --RegEx --sv "(App|Display)Name"

Usage:
  RECmd [options]

Options:
  -d <d>               Directory to look for hives (recursively). -f or -d is required
  -f <f>               Hive to search. -f or -d is required
  --kn <kn>            Display details for key name. Includes subkeys and values
  --vn <vn>            Value name. Only this value will be dumped
  --bn <bn>            Use settings from supplied file to find keys/values. See included sample
                       file for examples
  --csv <csv>          Directory to save CSV formatted results to. Required when -bn is used
  --csvf <csvf>        File name to save CSV formatted results to. When present, overrides default
                       name
  --saveTo <saveTo>    Saves --vn value data in binary form to file. Expects path to a FILE
  --json <json>        Export --kn to directory specified by --json. Ignored when --vn is specified
  --jsonf <jsonf>      When true, compress names for profile based hives.
  --details            Show more details when displaying results [default: False]
  --base64 <base64>    Find Base64 encoded values with size >= Base64 (specified in bytes)
  --minSize <minSize>  Find values with data size >= MinSize (specified in bytes)
  --sa <sa>            Search for <string> in keys, values, data, and slack
  --sk <sk>            Search for <string> in value record's key names
  --sv <sv>            Search for <string> in value record's value names
  --sd <sd>            Search for <string> in value record's value data
  --ss <ss>            Search for <string> in value record's value slack
  --literal            If true, --sd and --ss search value will not be interpreted as ASCII or
                       Unicode byte strings [default: False]
  --nd                 If true, do not show data when using --sd or --ss [default: False]
  --regex              If present, treat <string> in --sk, --sv, --sd, and --ss as a regular
                       expression [default: False]
  --dt <dt>            The custom date/time format to use when displaying time stamps [default:
                       yyyy-MM-dd HH:mm:ss.fffffff]
  --nl                 When true, ignore transaction log files for dirty hives [default: False]
  --recover            If true, recover deleted keys/values [default: False]
  --vss                Process all Volume Shadow Copies that exist on drive specified by -f or -d
                       [default: False]
  --dedupe             Deduplicate -f or -d & VSCs based on SHA-1. First file found wins [default:
                       False]
  --sync               If true, the latest batch files from
                       https://github.com/EricZimmerman/RECmd/tree/master/BatchExamples are
                       downloaded and local files updated [default: False]
  --debug              Show debug information during processing [default: False]
  --trace              Show trace information during processing [default: False]
  --version            Show version information
  -?, -h, --help       Show help and usage information
```

### Switch Descriptions

#### `--kn`

This switch informs the tool to dump the full details of a provided key within the Registry.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win10\APTSimulatorVM" --kn ROOT\ControlSet001\Control\BackupRestore\FilesNotToBackup`

#### `--vn`

This switch informs the tool to dump the full details of the value name specified. Please note, one of the following switches is required when using `--vn`: `--sk`, `--sv`, `--sd`, `--ss`, `--kn`, `--Base64`, `--MinSize`, and `--bn`.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win10\APTSimulatorVM" --kn "ROOT\Microsoft\Windows\CurrentVersion\Authentication\LogonUI" --vn LastLoggedOnSAMUser`

#### `--bn`

This switch informs the tool to use a specified batch file when parsing registry hives.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win10\APTSimulatorVM" --bn BatchExamples\Kroll_Batch.reb --csv C:\temp`

Please note, the Kroll Batch file is the most updated and actively maintained RECmd Batch file.

#### `--saveTo`

This switch informs the tool to save the binary data from a specified value name to a specified location.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win10\APTSimulatorVM" --kn "ROOT\Microsoft\Windows\CurrentVersion\Authentication\LogonUI" --vn LastLoggedOnSAMUser --saveTo c:\temp\output`

Please note, output is a binary file that can be opened in a text editor to view the contents.

#### `--details`

This switch informs the tool to display more details when displaying results.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware`

#### `--base64`

This switch informs the tool to search for Base64 values that are larger than the amount of bytes specified.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM" --base64 10`

The above command provides results similar to the following:

```
Found 2 search hits with size greater or equal to 10 bytes in D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM\DEFAULT (NTUSER)\NTUSER.DAT
Key: AppEvents\EventLabels\Notification.Default, Value: (default), Size: 26
Key: Control Panel\PowerCfg\PowerPolicies\2, Value: Name, Size: 26
```

#### `--minSize`

This switch informs the tool to search for values with a minimum size in bytes.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM" --minSize 500`

The above command provides results similar to the following:

```
Found 18 search hits with size greater or equal to 500 bytes in D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM\SAM
Key: SAM\Domains\Account\Users\000001F4, Value: V, Size: 688
Key: SAM\Domains\Account\Users\000001F5, Value: V, Size: 664
Key: SAM\Domains\Account\Users\000001F7, Value: V, Size: 680
Key: SAM\Domains\Account\Users\000001F8, Value: V, Size: 836
Key: SAM\Domains\Account\Users\000001F8, Value: SupplementalCredentials, Size: 1,168
Key: SAM\Domains\Account\Users\000003E9, Value: V, Size: 580
Key: SAM\Domains\Builtin\Aliases\00000221, Value: C, Size: 560
Key: SAM\Domains\Builtin\Aliases\00000222, Value: C, Size: 600
Key: SAM\Domains\Builtin\Aliases\00000223, Value: C, Size: 520
Key: SAM\Domains\Builtin\Aliases\00000227, Value: C, Size: 504
Key: SAM\Domains\Builtin\Aliases\0000022C, Value: C, Size: 564
Key: SAM\Domains\Builtin\Aliases\0000022F, Value: C, Size: 664
Key: SAM\Domains\Builtin\Aliases\00000232, Value: C, Size: 504
Key: SAM\Domains\Builtin\Aliases\00000242, Value: C, Size: 504
Key: SAM\Domains\Builtin\Aliases\00000243, Value: C, Size: 584
Key: SAM\Domains\Builtin\Aliases\00000244, Value: C, Size: 744
Key: SAM\Domains\Account\Users\000003E8, Value: V, Size: 632 (Deleted: True)
Key: SAM\Domains\Account\Users\000003E8, Value: SupplementalCredentials, Size: 1,552 (Deleted: True)
```

#### --sa`

This switch informs the tool to search for a specified string within keys, values, data, and slack.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sa VMware`

#### `--sk`

This switch informs the tool to search for a specified string within a value record's key names.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sk VMware`

The above command provides results similar to the following:

```
Found 2 search hits in D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM\NTUSER.DAT
        Key: Software\VMware, Inc.
        Key: Software\VMware, Inc.\VMware Tools
```

#### `--sv`

This switch informs the tool to search for a specified string within a record's value names.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sv VMware`

#### `--sd`

This switch informs the tool to search for a specified string within a value record's value data.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware`

The above command provides results similar to the following:

```
Found 5 search hits in D:\DFIRArtifactMuseum\Windows\Registry\Win11\RathbunVM\SYSTEM
        Key: ControlSet001\Control\DeviceContainers\{00000000-0000-0000-FFFF-FFFFFFFFFFFF}\BaseContainers\{00000000-0000-0000-FFFF-FFFFFFFFFFFF}, Value: SCSI\CdRom&Ven_NECVMWar&Prod_VMware_SATA_CD01\5&260e6d66&0&010000
        Key: ControlSet001\Control\DeviceContainers\{8a1a5449-86cd-11ec-ae32-806e6f6e6963}\BaseContainers\{8a1a5449-86cd-11ec-ae32-806e6f6e6963}, Value: SCSI\Disk&Ven_NVMe&Prod_VMware_Virtual_N\5&25a13950&0&000000
        Key: ControlSet001\Services\bam\State\UserSettings\S-1-5-21-4063860464-1508573791-632671957-1001, Value: \Device\HarddiskVolume3\Program Files\VMware\VMware Tools\vmtoolsd.exe
        Key: DriverDatabase\DriverPackages\vmci.inf_amd64_5e38a278d114b813\Strings, Value: loc.vmwaremanufacturer
        Key: DriverDatabase\DriverPackages\vmci.inf_amd64_5e38a278d114b813\Strings, Value: loc.vmwarebusdevicedesc
```

#### `--ss`

This switch informs the tool to search for a specified string within a value record's slack.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --ss VMware`

The above command will provide no results.

#### `--literal`

This switch informs the tool to not interpret the specified string as ASCII or Unicode byte strings.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware --literal`

#### `--nd`

This switch informs the tool to not show data when using `--sd` or `--ss`.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware --nd`

#### `--regex`

This switch informs the tool to treat the specified string as a regular expression for the following switches: `--sk`, `--sv`, `--sd`, and `--ss`.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd  "\b(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\b" --regex`

The above regular expression is the IPv4 regular expression taken from [here](https://github.com/AndrewRathbun/DFIRRegex).

#### `--nl`

This switch informs the tool to ignore replaying transaction logs.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware --nl`

Please note, using this switch will provide the following message: `Registry hive is dirty and transaction logs were found in the same directory, but --nl was provided. Data may be missing! Continuing anyways...`

#### `--recover`

This switch informs the tool to attempt to recover deleted keys/values.

Example: `.\RECmd.exe -d "D:\DFIRArtifactMuseum\Windows\Registry" --sd VMware --recover`

#### `--sync‘

This switch will inform the tool to download all RECmd Batch Files from [GitHub](https://github.com/EricZimmerman/RECmd/tree/master/BatchExamples) and update the local Batch Files stored in `.\RECmd\BatchExamples`.

Example: ```.\RECmd.exe --sync`

{pagebreak}

## RECmd Command Examples

### Example RECmd Commands

#### Parse a specified file

{line-numbers:false}
```powershell
RECmd.exe --f "C:\Temp\UsrClass 1.dat" --sk URL --recover false --nl
```

#### Example description here

{line-numbers:false}
```powershell
RECmd.exe --f "D:\temp\UsrClass 1.dat" --StartDate "11/13/2014 15:35:01"
```

#### Example description here

{line-numbers:false}
```powershell
RECmd.exe --f "D:\temp\UsrClass 1.dat" --RegEx --sv "(App|Display)Name"
```

{pagebreak}

## RECmd Output

### Analyzing RECmd Output - Console

{pagebreak}

### Analyzing RECmd Output - CSV

{pagebreak}

### Analyzing RECmd Output - JSON

{pagebreak}

## RECmd Sample Output

{pagebreak}

## RECmd Key Takeaways

### Important Data Points

{pagebreak}

## RECmd References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/RECmd> is the GitHub repository for RECmd

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2015/05/introducing-recmd.html>
* <https://binaryforay.blogspot.com/2015/05/recmd-0600-released.html>
* <https://binaryforay.blogspot.com/2015/06/recmd-0610-released.html>
* <https://binaryforay.blogspot.com/2015/07/reintroducing-registry-explorer-and.html>
* <https://binaryforay.blogspot.com/2015/07/registry-explorerrecmd-0710-released.html>
* <https://binaryforay.blogspot.com/2016/01/registry-values-starting-with-null.html>
* <https://binaryforay.blogspot.com/2018/03/updates-to-left-of-me-updates-to-right.html>
* <https://binaryforay.blogspot.com/2018/09/everything-gets-update-sept-2018-edition.html>
* <https://binaryforay.blogspot.com/2019/01/registry-explorer-and-recmd-1200.html>
* <https://binaryforay.blogspot.com/2019/01/locked-file-support-added-to.html>

#### Community Resources

* <https://aboutdfir.com/toolsandartifacts/windows/registry-explorer-recmd/>

### Download RECmd

RECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>

### Registry Sample Data

Sample Registry artifacts can be found at the [DFIRArtifactMuseum](https://github.com/AndrewRathbun/DFIRArtifactMuseum/tree/main/Windows/Registry). More can also be found [here](https://github.com/AndrewRathbun/VanillaWindowsRegistryHives) for nearly every version of Windows.
