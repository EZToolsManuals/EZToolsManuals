# SQLECmd

## SQLECmd Introduction

SQLECmd is a tool created by Eric Zimmerman used to parse SQLite databases. SQLite databases will only be parsed if a Map exists for that specific SQLite database.

### SQLECmd Use Cases

#### Law Enforcement

For those in Law Enforcement, this tool is useful for parsing SQLite databases which often store common web browser artifacts. SQLECmd can provide as a validation tool to many commonly used forensic suites that parse browsing history, as well. The SQLite queries are available on GitHub and can be modified by the community if ever the database schema evolves enough to where current SQLite queries do not work any longer. Additionally, this tool can be used to parse mobile artifacts which can serve as a validation tool for common mobile forensic suites.

#### Private Sector

For those in the Private Sector, this tool is useful for parsing SQLite databases which often store common web browser artifacts.

<!-- TODO: add a blurb about how output will differ based on the SQLite query -->

### SQLECmd Maps

<https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps>

#### Creating SQLECmd Maps

If you are looking for guidance on how to create SQLECmd Maps, look no further than the following resources:

* [SQLECmd Maps Guide](https://github.com/EricZimmerman/SQLECmd/blob/master/SQLMap/Maps/!OS_Application_OptionalDescription.guide)
* [SQLECmd Maps Template](https://github.com/EricZimmerman/SQLECmd/blob/master/SQLMap/Maps/!OS_Application_OptionalDescription.template)

Additionally, please check out Andrew Rathbun's 2021 SANS DFIR Summit presentation on EZ Tools/KAPE: How to Contribute to and Benefit from Open Source Contributions. Click [here](https://youtu.be/mIb1GQP3ciE?t=682) for a timestamped link to the section of the presentation that relates to SQLECmd Maps.

{pagebreak}

## SQLECmd Switches

In a PowerShell window, running `.\SQLECmd.exe` will provide the following options when running SQLECmd:

{line-numbers:false}
```powershell
Description:
  SQLECmd version 1.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/SQLECmd

  Examples: SQLECmd.exe -f "C:\Temp\someFile.db" --csv "c:\temp\out"
            SQLECmd.exe -d "C:\Temp\" --csv "c:\temp\out"
            SQLECmd.exe -d "C:\Temp\" --hunt --csv "c:\temp\out"

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed
  with two dashes

Usage:
  SQLECmd [options]

Options:
  -f <f>          File to process. This or -d is required
  -d <d>          Directory to process that contains SQLite files. This or -f is required
  --csv <csv>     Directory to save CSV formatted results to
  --json <json>   Directory to save JSON formatted results to
  --dedupe        Deduplicate -f or -d files based on SHA-1. First file found wins [default: True]
  --hunt          When true, all files are looked at regardless of name and file header is used to
                  identify SQLite files, else filename in map is used to find databases [default:
                  False]
  --maps <maps>   The path where event maps are located. Defaults to 'Maps' folder where program
                  was executed [default: C:\Users\CFUser\OneDrive - Kroll\Desktop\EZ
                  Tools\net6\SQLECmd\Maps]
  --sync          If true, the latest maps from
                  https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps are downloaded
                  and local maps updated [default: False]
  --debug         Show debug information during processing [default: False]
  --trace         Show trace information during processing [default: False]
  --version       Show version information
  -?, -h, --help  Show help and usage information


-f or -d is required. Exiting
```

### Switch Descriptions

#### `--hunt‘

This switch informs the tool to hunt for SQLite databases. This is useful due to SQLite databases often having inconsistent file extensions (or sometimes none at all). This switch will search for the file header for SQLite databases and inform examiners which files are SQLite databases. Please note, only those databases that have Maps made for them will be parsed.

Example: `.\SQLECmd.exe -d "D:\DFIRArtifactMuseum\Windows" --csv C:\temp --hunt`

SQLECmd will display the following message when a SQLite file is not found:

` D:\DFIRArtifactMuseum\Windows\SRUM\Win10\RathbunVM\Clean\SRU00004.log is not a SQLite file! Skipping...`

SQLECmd will display the following message when a SQLite file is found:

`Processing D:\DFIRArtifactMuseum\Windows\WindowsTimeline\Win10\APTSimulatorVM\ActivitiesCache.db...`

#### `--maps‘

This switch will inform the tool to look for SQLECmd Maps at a specified location other than `.\SQLECmd\Maps`.

Example: `.\SQLECmd.exe -d "D:\sql" --csv "D:\sql" --maps "D:\Maps"`

#### `--sync‘

This switch will inform the tool to download all SQLECmd Maps from [GitHub](https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps) and update the local Maps stored in `.\SQLECmd\Maps`.

Example: `.\SQLECmd.exe --sync`

<!-- All other switches are covered by eztools_commonswitches.txt - 2022-09-15 -->

{pagebreak}

## SQLECmd Command Examples

### Example SQLECmd Commands

#### Parse `someFile.db` and output to CSV to a specified location

{line-numbers:false}
```powershell
SQLECmd.exe -f "C:\Temp\someFile.db" --csv "c:\temp\out"
```

#### Parse SQLite databases located within `C:\Temp` and output to CSV to a specified location

{line-numbers:false}
```powershell
SQLECmd.exe -d "C:\Temp\" --csv "c:\temp\out"
```

#### Hunt for SQLite Databases recursively in a specified directory and output CSVs of any mapped databases to a specified location

{line-numbers:false}
```powershell
SQLECmd.exe -d "C:\Temp\" --hunt --csv "c:\temp\out"
```

The `--hunt` command will inform you as to which files are SQLite databases! This is very helpful when searching for new SQLite databases to research.

{pagebreak}

## SQLECmd References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/SQLECmd> is the GitHub repository for SQLECmd

### Download SQLECmd

SQLECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>

### SQLite Sample Data

Sample SQLite databases can be found at the [DFIRArtifactMuseum](https://github.com/AndrewRathbun/DFIRArtifactMuseum) in the Android and Windows directories.
