# SQLECmd

## SQLECmd Introduction

SQLECmd is a tool created by Eric Zimmerman used to parse SQLite databases. SQLite databases will only be parsed if a Map exists for that specific SQLite database.

### SQLECmd Maps

<https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps>

#### Creating SQLECmd Maps

If you are looking for guidance on how to create SQLECmd Maps, look no further than the following resources:

* [SQLECmd Maps Guide](https://github.com/EricZimmerman/SQLECmd/blob/master/SQLMap/Maps/!OS_Application_OptionalDescription.guide)
* [SQLECmd Maps Template](https://github.com/EricZimmerman/SQLECmd/blob/master/SQLMap/Maps/!OS_Application_OptionalDescription.template)

Additionally, please check out Andrew Rathbun’s 2021 SANS DFIR Summit presentation on EZ Tools/KAPE: How to Contribute to and Benefit from Open Source Contributions. Click [here](https://youtu.be/mIb1GQP3ciE?t=682) for a timestamped link to the section of the presentation that relates to SQLECmd Maps.

{pagebreak}

## SQLECmd Switches

In a PowerShell window, running `.\SQLECmd.exe` will provide the following options when running JLECmd:

{line-numbers:false}
```powershell
Description:
  SQLECmd version 1.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/SQLECmd

  Examples: SQLECmd.exe -f "C:\Temp\someFile.db" --csv "c:\temp\out"
            SQLECmd.exe -d "C:\Temp\" --csv "c:\temp\out"
            SQLECmd.exe -d "C:\Temp\" --hunt --csv "c:\temp\out"

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed
  with two dashes

Usage:
  SQLECmd [options]

Options:
  -f <f>          File to process. This or -d is required
  -d <d>          Directory to process that contains SQLite files. This or -f is required
  --csv <csv>     Directory to save CSV formatted results to
  --json <json>   Directory to save JSON formatted results to
  --dedupe        Deduplicate -f or -d files based on SHA-1. First file found wins [default: True]
  --hunt          When true, all files are looked at regardless of name and file header is used to
                  identify SQLite files, else filename in map is used to find databases [default:
                  False]
  --maps <maps>   The path where event maps are located. Defaults to 'Maps' folder where program
                  was executed [default: C:\Users\CFUser\OneDrive - Kroll\Desktop\EZ
                  Tools\net6\SQLECmd\Maps]
  --sync          If true, the latest maps from
                  https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps are downloaded
                  and local maps updated [default: False]
  --debug         Show debug information during processing [default: False]
  --trace         Show trace information during processing [default: False]
  --version       Show version information
  -?, -h, --help  Show help and usage information


-f or -d is required. Exiting
```

### Switch Descriptions

#### `--hunt‘

This switch

Example: ``

#### `--maps‘

This switch

Example: ``

#### `--sync‘

This switch will inform the tool to download all SQLECmd Maps from [GitHub](https://github.com/EricZimmerman/SQLECmd/tree/master/SQLMap/Maps) and update the local Maps stored in `.\SQLECmd\Maps`.

Example: `.\SQLECmd.exe --sync`

{pagebreak}

## SQLECmd Command Examples

### Example SQLECmd Commands

#### Example description here

{line-numbers:false}
```powershell

```

{pagebreak}

## SQLECmd Output

### Analyzing SQLECmd Output - CSV

{pagebreak}

### Analyzing SQLECmd Output - JSON

{pagebreak}

## SQLECmd Sample Output

{pagebreak}

## SQLECmd Key Takeaways

### Important Data Points

{pagebreak}

## SQLECmd References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/JumpList> is the C# library for parsing JumpList files
* <https://github.com/EricZimmerman/OleCf> is the C# library for parsing OLE compound files, which Jump Lists are
* <https://github.com/EricZimmerman/JLECmd> is the Command Line wrapper for the JumpList library

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2016/02/jump-lists-in-depth-understand-format.html>
* <https://binaryforay.blogspot.com/2016/03/introducing-jlecmd.html>
* <https://binaryforay.blogspot.com/2016/03/pecmd-lecmd-and-jlecmd-updated.html>
* <https://binaryforay.blogspot.com/2016/04/lecmd-and-jlecmd-updated.html>
* <https://binaryforay.blogspot.com/2016/09/jlecmd-v0960-released.html>

#### Community Resources

* Links to blog posts go here

### Download SQLECmd

SQLECmd can be downloaded from <https://ericzimmerman.github.io/#!index.md>
