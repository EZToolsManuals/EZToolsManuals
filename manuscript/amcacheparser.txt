# AmcacheParser

## AmcacheParser Introduction

AmcacheParser is a tool created by Eric Zimmerman used to parse Amcache.hve files, commonly found at `C:\Windows\appcompat\Programs\Amcache.hve`.

### AmcacheParser Use Cases

#### Law Enforcement

For those in Law Enforcement, this tool is useful for parsing the Amcache.hve artifact which can help provide insight as to which programs were installed on a computer. Additionally, the artifact can provide hardware information which may be useful context to have for the purpose of evidence identifcation.

#### Private Sector

For those in the Private Sector, this tool is useful for parsing the Amcache.hve artifact which can help provide evidence of program execution. Unassociated entries will often be where malicious applications can be found along with the associated SHA1 hash value which can then be leveraged into a resource like VirusTotal to learn more about the application.

<!-- TODO: need to expand this -->

{pagebreak}

## AmcacheParser Switches

In a PowerShell window, running `.\AmcacheParser.exe` will provide the following options when running AmcacheParser:

{line-numbers:false}
```powershell
Description:
  AmcacheParser version 1.5.1.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/AmcacheParser

  Examples: AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" --csv C:\temp
            AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" -i on --csv C:\temp --csvf foo.csv
            AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" -w "c:\temp\whitelist.txt" --csv C:\temp

            Short options (single letter) are prefixed with a single dash. Long commands are prefixed with two dashes

Usage:
  AmcacheParser [options]

Options:
  -f <f> (REQUIRED)       Amcache.hve file to parse
  -i                      Include file entries for Programs entries [default: False]
  -w <w>                  Path to file containing SHA-1 hashes to *exclude* from the results. Blacklisting overrides
                          whitelisting
  -b <b>                  Path to file containing SHA-1 hashes to *include* from the results. Blacklisting overrides
                          whitelisting
  --csv <csv> (REQUIRED)  Directory to save CSV formatted results to. Be sure to include the full path in double quotes
  --csvf <csvf>           File name to save CSV formatted results to. When present, overrides default name
  --dt <dt>               The custom date/time format to use when displaying time stamps. See https://goo.gl/CNVq0k for
                          options [default: yyyy-MM-dd HH:mm:ss]
  --mp                    Display higher precision for time stamps [default: False]
  --nl                    When true, ignore transaction log files for dirty hives. Default is FALSE
                           [default: False]
  --debug                 Show debug information during processing [default: False]
  --trace                 Show trace information during processing [default: False]
  --version               Show version information
  -?, -h, --help          Show help and usage information
```

### Switch Descriptions

#### `-i`

This switch will instruct AmcacheParser to include output for ProgramEntries.

Example: `.\AmcacheParser.exe -f "D:\DFIRArtifactMuseum\Windows\Amcache\Win10\APTSimulatorVM\Amcache.hve" --csv D:\Amcache -i`

#### `-w`

This switch will instruct AmcacheParser to read a specified file containing SHA-1 hashes to exclude from the results. This means that hashes specified in this file will NOT be included in the CSV output.

Example: `.\AmcacheParser.exe -f "D:\DFIRArtifactMuseum\Windows\Amcache\Win10\APTSimulatorVM\Amcache.hve" --csv D:\Amcache -w D:\Amcache\Hashes.txt`

#### `-b`

This switch will instruct AmcacheParser to read a specified file containing SHA-1 hashes to include from the results. This means that hashes specified in this file will be the ONLY results included in the CSV output.

Example: `.\AmcacheParser.exe -f "D:\DFIRArtifactMuseum\Windows\Amcache\Win10\APTSimulatorVM\Amcache.hve" --csv D:\Amcache -b D:\Amcache\Hashes.txt`

#### `--mp`

This switch will instruct AmcacheParser to provide more verbose timestamps. For instance, running `.\AmcacheParser.exe -f "D:\Amcache\Amcache.hve" --csv D:\Amcache` resulted in the following:

{line-numbers:false}
```powershell
File Key Last Write Timestamp
2022-03-20 21:24:56.000000
```

Running `.\AmcacheParser.exe -f "D:\DFIRArtifactMuseum\Windows\Amcache\Win10\APTSimulatorVM\Amcache.hve" --csv D:\Amcache --mp` resulted in the following:

{line-numbers:false}
```powershell
File Key Last Write Timestamp
2022-03-20 21:24:56.028214
```

#### `--nl`

This switch will instruct AmcacheParser to ignore transaction logs (*.LOG files)

Example: `.\AmcacheParser.exe -f "D:\DFIRArtifactMuseum\Windows\Amcache\Win10\APTSimulatorVM\Amcache.hve" --csv D:\Amcache --nl`

<!-- All other switches are covered by eztools_commonswitches.txt - 2022-09-15 -->

{pagebreak}

## AmcacheParser Command Examples

### Example AmcacheParser Commands

#### Parse an Amcache.hve File and Output to CSV

{line-numbers:false}
```powershell
AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" --csv C:\temp
```

#### Parse an Amcache.hve file and Output to CSV (specified filename) with ProgramEntries

{line-numbers:false}
```powershell
AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" -i on --csv C:\temp --csvf foo.csv
```

#### Parse an Amcache.hve file and Output to CSV While Only Including Results That Match Specified Hashes

{line-numbers:false}
```powershell
AmcacheParser.exe -f "C:\Temp\amcache\AmcacheWin10.hve" -w "c:\temp\whitelist.txt" --csv C:\temp
```

## AmcacheParser Output

### Analyzing AmcacheParser Output - CSV

`--csv` is required, so there's no console output with AmcacheParser

AmcacheParser will produce the following CSVs:

`%timestamp%_Amcache_AssociatedFileEntries.csv`
`%timestamp%_Amcache_DeviceContainers.csv`
`%timestamp%_Amcache_DevicePnps.csv`
`%timestamp%_Amcache_DriveBinaries.csv`
`%timestamp%_Amcache_DriverPackages.csv`
`%timestamp%_Amcache_ProgramEntries.csv`
`%timestamp%_Amcache_ShortCuts.csv`
`%timestamp%_Amcache_UnassociatedFileEntries.csv`

`%timestamp%` will look something similar to this: `20220904032628`

{pagebreak}

## AmcacheParser Key Takeaways

### Important Data Points

The Amcache.hve will provide SHA1 hash values for binaries. This can be helpful in Incident Response engagements where you can leverage the SHA1 hash value for something like VirusTotal to learn more about a potentially malicious binary. Please note that often malicious binaries introduced by threat actors will be found in the UnassociatedEntries CSV. These will be programs that don't have program entries within the Amcache. This is an easy way to find malware because malware doesn't come with an installer! Additionally, the File Key ID Last Write Timestamp can be a reliable indicator of evidence of execution.

If you want to analyze the Amcache.hve artifact in a GUI tool, you can simply ingest it into Registry Explorer similar to other common Registry hives.

{pagebreak}

## AmcacheParser References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/AmcacheParser> is the AmcacheParser repo

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman's blog, Binary Foray:

* [Locked file support added to AmcacheParser, AppCompatCacheParser, MFTECmd, ShellBags Explorer (and SBECmd), and Registry Explorer (and RECmd)](https://binaryforay.blogspot.com/2019/01/locked-file-support-added-to.html)
* [Everything gets an update, Sept 2018 edition](https://binaryforay.blogspot.com/2018/09/everything-gets-update-sept-2018-edition.html)
* [Updates to the left of me, updates to the right of me, version 1 releases are here (for the most part)](https://binaryforay.blogspot.com/2018/03/updates-to-left-of-me-updates-to-right.html)
* [(Am)cache still rules everything around me (part 2 of 1)](https://binaryforay.blogspot.com/2017/10/amcache-still-rules-everything-around.html)

### Download AmcacheParser

AmcacheParser can be downloaded from <https://ericzimmerman.github.io/#!index.md>

### Amcache Sample Data

Sample Amcache.hve artifacts can be found at the [DFIRArtifactMuseum](https://github.com/AndrewRathbun/DFIRArtifactMuseum/tree/main/Windows/Amcache).
