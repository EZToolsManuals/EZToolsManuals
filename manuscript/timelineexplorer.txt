# Timeline Explorer

## Timeline Explorer Introduction

Timeline Explorer is a tool created by Eric Zimmerman that can be used by forensic examiners (or anyone) to ingest CSV files (and a few other filetypes). Timeline Explorer can handle large files (over 14GB) and provides a user friendly experience for dealing with data contained within CSV files. Timeline Explorer can have multiple files open at a time (over 300) and contains many familiar keyboard shortcuts to move through analysis more efficiently.

Timeline Explorer uses [Plugins](https://github.com/EricZimmerman/TLEFilePlugins) that will allow Timeline Explorer to ingest multiple filetypes. The benefit of these Plugins allows for the `Line` and `Tag` columns to be populated for the various supported file types as well as other enhancements to boolean (True/False) and timestamp values.

### Supported File Types

Timeline Explorer supports the following filetypes:

* .csv
* .tsv
* .xlsx
* .txt

Timeline Explorer only runs on Windows due to the [.NET Desktop Runtime](https://dotnet.microsoft.com/en-us/download/dotnet/6.0) currently only being available for Windows and not macOS or Linux.

### Ingesting Excel Spreadsheets (.xlsx)

Please note, when you ingest an Excel spreadsheet with multiple sheets, only the first sheet will load within Timeline Explorer. All other sheets will be ignored.

{pagebreak}

## Timeline Explorer Features

### File Menu

The File menu has a couple of noteworthy features that we'll cover in this section

![Timeline Explorer's File Menu](timelineexplorer\TLEFileMenu.jpg)

#### Sessions

When you have multiple CSVs ingested into Timeline Explorer, you can save a session which will open all the same files that are opened at the time of session save. Timeline Explorer will create a `.tle_sess` file which is simply a JSON file that will look similar to the example below:

{line-numbers:false}
```json
{
	"SessionFiles": {
		"C:\\temp\\20220913030423_RECmd_Batch_Kroll_Batch_Output.csv": [
		],
		"C:\\temp\\20220913030450_RECmd_Batch_Kroll_Batch_Output.csv": [
		]
	}
}
```

Opening this particular session file will instruct Timeline Explorer to open the files specified. Additionally, any tagged rows will persist when saving and reloading sessions.

#### Export

Timeline Explorer can export an opened file as CSV or XLSX. This may be helpful where if you have a CSV file ingested but want to export it as XLSX, or vice-versa. Please note, the Export function is WYSIWYG, so whatever data is visible due to active layouts, filters, sorting, etc will be what is exported.

### Tools Menu

Timeline Explorer offers multiple useful features within the Tools menu.

![Timeline Explorer's Tools Menu](timelineexplorer\TLEToolsMenu.jpg)

#### Find

Timeline Explorer provides an incredibly useful Find window where examiners can search for terms amongst all open files. The below example shows the term `microsoft` and the amount of hits within each open file. Double-clicking on a search result will warp to the file in question and automatically filter on the search term.

![Timeline Explorer's Find Window](timelineexplorer\TLEFindExample.jpg)

#### Right-Click to Copy

One of the most convenient features Timeline Explorer offers is the ability to carry out copy functions with a simple right-click of the mouse. This allow for minimal, if any, interaction with a keyboard when copying data from a file opened in Timeline Explorer. Every click saved matters!

#### Copy Column Headers When Copying

This can be useful for when headers need to be copied out of a file that's open within Timeline Explorer.

{pagebreak}

#### Groups

Timeline Explorer allows examiners to grab a column header and drag above to the box which contains the text `Drag a column header here to group by that column`, as seen below.

![An Example of the Grouping by Column Header Workflow in Timeline Explorer](timelineexplorer\TLEColumnHeaderGroupingExample.jpg)

Grabbing the `Time Created` column header and dragging it into the blank area above the column headers will create a grouping that can be very helpful during everyday analysis.

{pagebreak}

##### RECmd

Below is an example of grouping RECmd output by the `Hive Type` column.

![Grouping Columns in Timeline Explorer](timelineexplorer\TLEGroupingRECmdExample.jpg)

When pushing `CTRL+K`, the Hive Type groups will collapse which can then be expanded with `CTRL+M`.

{pagebreak}

##### EvtxECmd

Below is an example of grouping EvtxECmd output by the `Map Description` column.

![Timeline Explorer with Multiline Tabs Enabled](timelineexplorer\TLEGroupingEvtxECmdExample.jpg)

{pagebreak}

Below is an example of stacking column headers to form a complex grouping.

![Timeline Explorer with Multiline Tabs Enabled](timelineexplorer\TLEGroupingEvtxECmdExample2.jpg)

With this particular grouping, examiners can see how many overall events resides in the Security.evtx file as well as how many events exist within each Provider that logs to that particular .evtx file.

#### Tagging

As long as there are Line and Tag columns visibile for a file ingested into Timeline Explorer, examiners can take advantage of the Tag feature. Rows that contain data of interest can be tagged by checking the box in the Tag column. This can be useful for when analysis is complete on a given file to where an examiner is ready to filter on only the rows of interest. This can be done by filtering on the Tag column for checked boxes only. This will allow for all untagged rows to disappear and only rows that were tagged by the examiner will appear.

{pagebreak}

#### Multiline Open Tabs

Below is an example of Timeline Explorer with Multiline Tabs enabled.

![Timeline Explorer with Multiline Tabs Enabled](timelineexplorer\TLEMultilineTabsOn.jpg)

<!-- Lots of whitespace here. Room for more content here, within reason -->

{pagebreak}

Below is an example of Timeline Explorer with Multiline Tabs disabled.

![Timeline Explorer with Multiline Tabs Disabled](timelineexplorer\TLEMultilineTabsOff.jpg)

<!-- Lots of whitespace here. Room for more content here, within reason -->

#### Clear Filters

`CTRL+E` is one of the most useful keyboard shortcuts in Timeline Explorer. Regardless of how many filters are applied by an examiner, this shortcut will clear them all.

#### Applying Value as a Filter

`CTRL+SHIFT+F` is another useful keyboard shortcut available in Timeline Explorer. When a given cell is highlighted in Timeline Explorer, this keyboard shortcut will allow for the value within that cell to be applied as a filter in the column it resides in. The filter type can be changed once the value is populated in the column header filter box.

#### Reset Column Widths

As examinations progress, columns get resized and it can be a pain to manually resize the columns back to a reasonable size. `CTRL+R` provides the quickest method to reset all columns to their default width.

{pagebreak}

### Tabs Menu

The Tabs menu provides examiners with an overview of all files opened within a Timeline Explorer instance.

![Timeline Explorer's Tabs Menu](timelineexplorer\TLETabsMenu.jpg)

In addition to providing an easy way to see a massive amount of tabs open within Timeline Explorer, this box also serves as a search box so you can filter on a specific open file that you want to analyze.

![Searching within Timeline Explorer's Tabs Menu](timelineexplorer\TLETabsMenuSearchBoxExample.jpg)

{pagebreak}

### View Menu

The View menu provides helpful information when trying to troubleshoot issues with Timeline Explorer.

![Timeline Explorer's View Menu](timelineexplorer\TLEViewMenu.jpg)

<!-- Lots of whitespace here. Room for more content here, within reason -->

{pagebreak}

#### Messages

Timeline Explorer offers a Messages window that can provide insight as to how long a file takes to ingest into Timeline Explorer, which plugin was used to process a file during ingestion, and error messages that may come up while ingesting unsupported output. As always, toggling Debug Messages will provide much more verbose messaging in this window but it will also likely drastically slow the ingestion of a file.

![Timeline Explorer's Messages Window](timelineexplorer\TLEMessagesWindow.jpg)

{pagebreak}

### Help Menu

Timeline Explorer provides helpful resources within the Help menu.

![Timeline Explorer's Help Menu](timelineexplorer\TLEHelpMenu.jpg)

{pagebreak}

### Quick Help

Below is the information located in `Help -> Quick help`.

![Timeline Explorer's Quick Help](timelineexplorer\TLEQuickHelp.jpg)

{pagebreak}

#### Legend

When ingesting Super Timelines, the following Legend can prove to be helpful.

![Timeline Explorer's Legend for Super Timelines](timelineexplorer\TLELegend.jpg)

<!-- Lots of whitespace here. Room for more content here, within reason -->

{pagebreak}

### Conditional Formatting

#### Custom Conditions

![Timeline Explorer's Conditional Formatting -> Manage Rules Location](timelineexplorer\TLEConditionalFormattingHighlightCellRulesCustomConditionBlank.jpg)

{pagebreak}

#### Manage Rules

Timeline Explorer allows for examiners to set conditional formatting for certain criteria within rows, columns, and/or cells. This can be done using the Manage Rules menu.

![Timeline Explorer's Conditional Formatting -> Manage Rules Location](timelineexplorer\TLEConditionalFormattingManageRules.jpg)

{pagebreak}

Clicking on Manage Rules will bring up this Rules Manager window.

![Timeline Explorer's Conditional Formatting -> Manage Rules Location](timelineexplorer\TLEConditionalFormattingManageRulesBlank.jpg)

{pagebreak}

##### Example Rule

Clicking New Rule in the top left will bring up the following window.

![Timeline Explorer's Conditional Formatting -> Manage Rules Location](timelineexplorer\TLEConditionalFormattingManageRulesNewFormattingRule.jpg)

{pagebreak}

Below is an example of what highlighting every row containing the string `successful` in the Map Description column looks like.

![Highlighting Every Row That Contains "Successful"](timelineexplorer\TLEConditionalFormattingExampleSuccessfulRed.jpg)

Diving deeper into the Rules Manager will show the settings for applying this conditional formatting to every row containing the desired string.

![Example Rule Part 1](timelineexplorer\TLEConditionalFormattingExampleSuccessfulRed2.jpg)

{pagebreak}

Using the bottom formula option allows the examiner to craft a filter similar to the filter editor used in the main Timeline Explorer window.

![Example Rule Part 2](timelineexplorer\TLEConditionalFormattingExampleSuccessfulRed3.jpg)

## Timeline Explorer Settings

A `TLE_settings.xml` file is located within `.\TimelineExplorer\Settings` which stores user preferences in XML format. These are effectively storing the preferences for the options that can be modified by the user within the Tools menu. An example can be seen below:

```xml
<?xml version="1.0" encoding="utf-8"?>
<Settings xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/TimelineExplorer.Classes">
	<CopyColumnHeaders>
		false
	</CopyColumnHeaders>
	<CopyRightClick>
		true
	</CopyRightClick>
	<DateTimeFormat>
		yyyy-MM-dd HH:mm:ss.fffffff
	</DateTimeFormat>
	<DetailsOnTop>
		false
	</DetailsOnTop>
	<FirstPinnedColumns xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
	<FontName>
		Consolas
	</FontName>
	<FontSize>
		12
	</FontSize>
	<MultilineTabs>
		true
	</MultilineTabs>
	<Theme>
		Office 2019 Black
	</Theme>
</Settings>
```

A public copy of this exact `TLE_settings.xml` file is hosted on Andrew Rathbun's GitHub [here](https://github.com/AndrewRathbun/TimelineExplorerSettings).

### DateTimeFormat

It is very important that the `.fffffff` values are added to this whether in the Timeline Explorer GUI or directly into the XML file itself. Without these subseconds enabled, it will be impossible to detect [timestomping](https://www.kroll.com/en/insights/publications/cyber/anti-forensic-tactics/anti-forensics-tactics-timestomping) within MFTECmd output or leverage more precise timestamps that other EZ Tools provide.

## Timeline Explorer Layout Files

### What Are Layout Files?

Layout files are located at `.\ZimmermanTools\net6\TimelineExplorer\Layouts\Default` which provide the default layouts for output that's supported with a Plugin. If you move columns around, hide columns, or anything else, those preferences will be stored in layout files with the `.layout.local` file extension. If you ever want to revert to the default, delete your `.layout.local` files and Timeline Explorer will revert to the `.layout` files within the `.\ZimmermanTools\net6\TimelineExplorer\Layouts\Default` directory.

<!-- Lots of whitespace here. Room for more content here, within reason -->

{pagebreak}

## Timeline Explorer Plugins

Plugins are written in C# (as are all of Eric's tools) which aim to provide better support for ingested CSV output.

### Expected Headers

Each Plugin looks for headers within CSV output so it can know that a plugin matches with the tool output being ingested.

#### Why does Timeline Explorer need plugins?

It doesn't NEED plugins but plugins will allow for a better experience when dealing with supported tool output.

For instance, [here](https://github.com/EricZimmerman/TLEFilePlugins/blob/13055b37b5880c131e1cf6ae4d5ff1a57a537467/TLEFileEZTools/EZTools.cs#L368) is an excerpt from the EZ Tools plugin where the plugin is looking for certain headers within the CSV in order to ingest the output properly:

{line-numbers:false}
```csharp
		ExpectedHeaders = new HashSet<string>(StringComparer.OrdinalIgnoreCase)
		{
			"entrynumber,sequencenumber,inuse,parententrynumber,parentsequencenumber,parentpath,filename,extension,filesize,referencecount,reparsetarget,isdirectory,hasads,isads,si<fn,useczeros,copied,siflags,nametype,created0x10,created0x30,lastmodified0x10,lastmodified0x30,lastrecordchange0x10,lastrecordchange0x30,lastaccess0x10,lastaccess0x30,updatesequencenumber,logfilesequencenumber,securityid,objectidfiledroid,loggedutilstream,zoneidcontents"
		};
```

{pagebreak}

### Ingesting CSVs That Don't Have Plugin Support

If there are no headers that match, then Timeline Explorer will default to the `GenericCSV` plugin, which can be found [here](https://github.com/EricZimmerman/TLEFilePlugins/tree/master/TLEFileGenericCsv). Effectively, this plugin will treat every value as a string, regardless of whether it's a True/False value, a timestamp, etc.

### Examples of Benefits of Timeline Explorer Plugins

Here we will cover a few key examples of what value plugins provide to Timeline Explorer and supported output.

#### Checkboxes

Excel is unable render checkboxes for True/False values when dealing with MFTECmd output.

![MFTECmd's InUse column in Excel](timelineexplorer\ExcelCheckboxExample.png)

Timeline Explorer will render the True/False values as a checkbox.

![MFTECmd's InUse column in Timeline Explorer](timelineexplorer\TLECheckboxExample.png)

#### Timestamp Column Filters, Part 1

Excel is unable to handle the values within MFTECmd output (and other EZ Tools' output) without input from the user.

![MFTECmd's timestamp columns in Excel](timelineexplorer\ExcelMFTECmdTimestampsExample.png)

When converting the timestamp manually in Excel to the specified format, it works, but why do all of that work? Timeline Explorer displays each timestamp as a DateTime object and allow the examiner to digest the data quicker.

![MFTECmd's timestamp columns in Timeline Explorer](timelineexplorer\TLEMFTECmdTimestampsExample.png)

{pagebreak}

#### Timestamp Column Filters, Part 2

Now that we've established the power of plugins for timestamp values, let's further demonstrate the power of a plugin that's catered towards a specific tool's output compared to the GenericCsv plugin.

By removing the `TLEFileEZTools.dll` prior to ingesting MFTECmd output, we can see that Timeline Explorer won't know to convert the values within the timestamp-specific columns to DateTime objects.

![MFTECmd's timestamps displayed as strings](timelineexplorer\TLEGenericCSVTimestampsExample.png)

To reproduce the above example, remove the `.\TimelineExplorer\Plugins\TLEFileEZTools.dll` file prior to opening Timeline Explorer and ingest output from the most current version of MFTECmd.

{pagebreak}

When we leverage the plugin built for EZ Tools output, we can see what value Timeline Explorer provides.

![MFTECmd's timestamps displayed as DateTime objects](timelineexplorer\TLEEzToolsPluginTimestampsExample.png)

The above provides a much more user friendly method of filtering on years, months, and days when conducting analysis.

<!-- Lots of whitespace here. Room for more content here, within reason -->

{pagebreak}

## Timeline Explorer References

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman's blog, Binary Foray:

* [Introducing Timeline Explorer v0.4.0.0](https://binaryforay.blogspot.com/2017/04/introducing-timeline-explorer-v0400.html)
* [Timeline Explorer 0.5.0.0 released](https://binaryforay.blogspot.com/2017/05/timeline-explorer-0500-released.html)
* [Timeline Explorer 0.6.0 released!](https://binaryforay.blogspot.com/2017/10/timeline-explorer-060-released.html>)
* [Updates to the left of me, updates to the right of me, version 1 releases are here (for the most part)](https://binaryforay.blogspot.com/2018/03/updates-to-left-of-me-updates-to-right.html)
* [A fluery of updates!](https://binaryforay.blogspot.com/2018/05/a-fluery-of-updates.html)
* [Everything gets an update, Sept 2018 edition](https://binaryforay.blogspot.com/2018/09/everything-gets-update-sept-2018-edition.html)

#### Community Resources

* [AboutDFIR - Timeline Explorer](https://aboutdfir.com/toolsandartifacts/windows/timeline-explorer)
* [Episode 87: Introducing and Using Timeline Explorer](https://www.youtube.com/watch?v=Hy8ZIc86tCo)

### Download Timeline Explorer

Timeline Explorer can be downloaded from <https://ericzimmerman.github.io/#!index.md>
