# RLA

## RLA Introduction


{pagebreak}

## RLA Switches

In a PowerShell window, running `.\RLA.exe` will provide the following options when running JLECmd:

{line-numbers:false}
```powershell
rla version 2.0.0.0

Author: Eric Zimmerman (saericzimmerman@gmail.com)
https://github.com/EricZimmerman/RECmd

Note: Enclose all strings containing spaces with double quotes

Command line:

Description:
  rla version 2.0.0.0

  Author: Eric Zimmerman (saericzimmerman@gmail.com)
  https://github.com/EricZimmerman/RECmd

  Note: Enclose all strings containing spaces with double quotes

  Example: rla.exe -f "C:\Temp\UsrClass 1.dat" --out C:\temp
           rla.exe -d "D:\temp\" --out c:\temp


Usage:
  rla [options]

Options:
  -f <f>          Hive to process. -f or -d is required
  -d <d>          Directory to look for hives (recursively). -f or -d is required
  --out <out>     Directory to save updated hives to. Only dirty hives with logs applied will end
                  up in --out directory
  --ca            When true, always copy hives to --out directory, even if they aren't dirty.
                  [default: True]
  --cn            When true, compress names for profile based hives. [default: True]
  --debug         Show debug information during processing [default: False]
  --trace         Show trace information during processing [default: False]
  --version       Show version information
  -?, -h, --help  Show help and usage information

```

### Switch Descriptions

#### SWITCH

{pagebreak}

## RLA Command Examples

### Example RLA Commands

#### Example description here

{line-numbers:false}
```powershell

```

{pagebreak}

## RLA Output

### Analyzing RLA Output - Console

{pagebreak}

### Analyzing RLA Output - CSV

{pagebreak}

### Analyzing RLA Output - JSON

{pagebreak}

### Analyzing RLA Output - HTML

{pagebreak}

## RLA Sample Output

{pagebreak}

## RLA Key Takeaways

### Important Data Points

{pagebreak}

## RLA References

### Associated GitHub Repositories

* <https://github.com/EricZimmerman/JumpList> is the C# library for parsing JumpList files 
* <https://github.com/EricZimmerman/OleCf> is the C# library for parsing OLE compound files, which Jump Lists are
* <https://github.com/EricZimmerman/JLECmd> is the Command Line wrapper for the JumpList library

### Blog Posts

#### Official Blog Posts

Blog posts from Eric Zimmerman’s blog, Binary Foray:

* <https://binaryforay.blogspot.com/2016/02/jump-lists-in-depth-understand-format.html>
* <https://binaryforay.blogspot.com/2016/03/introducing-jlecmd.html>
* <https://binaryforay.blogspot.com/2016/03/pecmd-lecmd-and-jlecmd-updated.html>
* <https://binaryforay.blogspot.com/2016/04/lecmd-and-jlecmd-updated.html>
* <https://binaryforay.blogspot.com/2016/09/jlecmd-v0960-released.html>

#### Community Blog Posts

* Links to blog posts go here

### Download RLA

RLA can be downloaded from <https://ericzimmerman.github.io/#!index.md>
